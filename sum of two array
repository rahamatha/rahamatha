#include <stdio.h>
int mergeAndSum(int nums1[], int m, int nums2[], int n) {
    int sum = 0;
    int merged[m + n];
    int i = 0, j = 0, k = 0;
    while (i < m && j < n) {
        if (nums1[i] < nums2[j])
            merged[k++] = nums1[i++];
        else
            merged[k++] = nums2[j++];
    }
    while (i < m)
        merged[k++] = nums1[i++];
    while (j < n)
        merged[k++] = nums2[j++];
    for (int l = 0; l < m + n; l++)
        sum += merged[l];

    return sum;
}

int main() {
    int nums1[] = {1, 3};
    int nums2[] = {2};
    int m = sizeof(nums1) / sizeof(nums1[0]);
    int n = sizeof(nums2) / sizeof(nums2[0]);

    printf("Output for Example 1: %d\n", mergeAndSum(nums1, m, nums2, n)); // Output: 6

    int nums3[] = {1, 2};
    int nums4[] = {3, 4};
    m = sizeof(nums3) / sizeof(nums3[0]);
    n = sizeof(nums4) / sizeof(nums4[0]);

    printf("Output for Example 2: %d\n", mergeAndSum(nums3, m, nums4, n)); // Output: 10

    return 0;
}
